name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        env:
          DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "Checking if secret is set..."
          if [ -z "$DEPLOY_SSH_PRIVATE_KEY" ]; then
            echo "Error: DEPLOY_SSH_PRIVATE_KEY is empty"
            exit 1
          fi
          echo "Secret is set, length: ${#DEPLOY_SSH_PRIVATE_KEY}"
          echo "First 10 chars of secret: ${DEPLOY_SSH_PRIVATE_KEY:0:10}"
          echo "$DEPLOY_SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "Key file permissions:"
          ls -l ~/.ssh/deploy_key
          echo "Key file size:"
          wc -l ~/.ssh/deploy_key
          echo "First few characters of key file:"
          head -n 1 ~/.ssh/deploy_key
          echo "Last few characters of key file:"
          tail -n 1 ~/.ssh/deploy_key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with Docker Compose
        env:
          DEPLOY_SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e
            echo "Starting deployment..."
            
            # Navigate to project directory
            cd ${{ secrets.PROJECT_PATH }} || { echo "Failed to change directory"; exit 1; }
            
            # Pull latest changes
            echo "Pulling latest changes..."
            git pull origin main || { echo "Failed to pull changes"; exit 1; }
            
            # Stop and remove existing containers
            echo "Stopping existing containers..."
            docker-compose down || { echo "Failed to stop containers"; exit 1; }
            
            # Rebuild and start containers
            echo "Rebuilding and starting containers..."
            docker-compose up -d --build || { echo "Failed to start containers"; exit 1; }
            
            echo "Deployment completed successfully!"
          EOF
